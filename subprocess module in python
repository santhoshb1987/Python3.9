
Subprocess Module:
------------------

os.system("clear") --> we can run os related commands using os module but we cannot return the output of the command.


subprocess module is used to return the command out into list or output

subprocess.py
-------------

import subprocess
cmd="ls -lrt"
sp=subprocess.Popen(cmd,shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE,universal_newlines=True)
rc=sp.wait()
out,err=sp.communicate()

print(f'The return code: {rc}')
#print(f'The output is: \n{out.splitlines()}')
#print(f'The error is: \n{err.splitlines()}')
for each in out.splitlines():
        print(each)


import subprocess
sp=subprocess.Popen(cmd,shell=True/False,stdout=subprocess.PIPE,stderr=subprocess.PIPE,universal_newlines=True)
rc=sp.wait()
out,err=sp.communicate()
print(f'OUTPUT IS: {out}')
print(f'Error is: {err}')
==================================>
if shell=True then your cmd is a string (as your os command)
if shell=False then your cmd is a list

Note: shell=False dont work on your os environment variables
      
ex: cmd="ls -lrt" ==>shell=True
    shell=False ==> cmd="ls -lrt".split()  or ['ls','-lrt']
=======================================================================


shell=True always on windows
============================
cmd is a string

sp=subprocess.Popen('dir',shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
rt=sp.wait()
o,e=sp.communicate()
print(o)
--> This will print all the directories
By default o value will be binaru format to change that we need to add universal_newlines=True







